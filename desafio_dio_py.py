# -*- coding: utf-8 -*-
# desafio_pandas_dio.ipynb

#Automatically generated by Colaboratory.

#Original file is located at
    #https://colab.research.google.com/drive/1-H5hCb2e0qjb-sL1h1vnkicyVT99FyqH

#Importação das bibliotecas


import pandas as pd
import matplotlib as plt

#Gerando arquivos .xlsx

df_nba = pd.read_excel('/DIO/NBA.xlsx')
df_nfl = pd.read_excel('/DIO/NFL.xlsx')
df_nhl = pd.read_excel('/DIO/NHL.xlsx')
df_mlb = pd.read_excel('/DIO/MLB.xlsx')
df_mls = pd.read_excel('/DIO/MLS.xlsx')

#Concatenar arquivos

df = pd.concat([df_nba, df_mlb, df_mls, df_nhl, df_nfl])

#Localizar ',' e substituir por '.'

df['Capacity '] = df['Capacity '].str.replace(',','.')

# Alteração de 'str' para 'float'

df["Capacity "] = df["Capacity "].astype(float)

# Tipos de dados

df.dtypes

# Quantidade de registros por liga

group_leagues = df.groupby(['League'])['League'].count()
group_leagues.head()

# Quantidade de registros

group_leagues = df.groupby(['League'])['League'].count().sum()
print(group_leagues)

# Divisão por delimitador ','

div = df['Location '].str.split(',')
div.head()

# Criação das novas colunas 'City' e 'State'

City = div.str.get(0)
State = div.str.get(1)
df['City'] = City
df['State'] = State
df.head(100)

# Remoção da coluna 'Location '

df.drop(["Location "], axis=1, inplace=True)
df.head(100)

# Tratamento de dados faltantes

df['Capacity '].fillna(0,inplace=True)
df.dropna(inplace=True)
df.isnull().sum()

df.head(100)

# Quais são os 5 times que contém a maior capacidade em seus estádios?

capacitymax = df.sort_values("Capacity ", ascending=False)
capacitymax.head(5)

# Qual é o time que contém maior capacidade de cada liga?

leaguemax = df.groupby("League").max().sort_values("Capacity ", ascending=False)
print(leaguemax)

# Quais são as 5 cidades que contém maior capacidade em seus estádios?

citymax = df.groupby("City").sum().sort_values("Capacity ", ascending=False)
citymax.head(5)

# Quais são as 5 estados que contém maior capacidade em seus estádios?

statemax = df.groupby("State").sum().sort_values("Capacity ", ascending=False)
statemax.head(5)

# Quais são os 5 times mais antigos das ligas?

openedteam = df.groupby("Team").min().sort_values("Opened ", ascending=True)
print(openedteam)

# Quais as cidades que contém maior quantidade de times?

citycount = df['City'].value_counts(ascending=False)
citycount.head(5)

# Quais os estados que contém maior quantidade de times?

statecount = df['State'].value_counts(ascending=False)
statecount.head(5)

citycount.plot.pie()

statecount.plot.pie()

# Describe
df['Capacity '].describe()

# Qual a liga que contém maior capacidade em seus estádios?

leaguesum = df.groupby("League")['Capacity '].sum()
leaguesum.plot.barh()